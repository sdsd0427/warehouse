<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link href='/warehouse/resources/lib/main.css' rel='stylesheet' />
<script src='/warehouse/resources/lib/main.js'></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script>
//   $.ajax({
<%--     	 url:"<%= request.getContextPath()%>/calendar/", --%>
//          type:"get",
//          success:function(data){
//         	 var calendarEl = document.getElementById('calendar');
//         	 var calendar = new FullCalendar.Calendar(calendarEl, {
//         		 events: [
//         			 {
//         				 title  : data.title,
//         		         start  : '2022-06-30'
//         		      },
//          		      {
//          		         title  : 'event2',
//          		         start  : '2022-06-25',
//         		         end    : '2022-06-29'
//          		      },
//          		    ]
//          		});
        		        
//          		calendar.render();
//          	}
//          });
    


	document.addEventListener('DOMContentLoaded', function() {
	    var calendarEl = document.getElementById('calendar');
	    var calendar = new FullCalendar.Calendar(calendarEl, {
	    	expandRows: true, // 화면에 맞게 높이 재설정        
	    	slotMinTime: '00:00', // Day 캘린더에서 시작 시간        
	    	slotMaxTime: '24:00', // Day 캘린더에서 종료 시간        
	      	headerToolbar: { // 해더에 표시할 툴바
		        left: 'prev,next today',
		        center: 'title',
		        right: 'dayGridMonth,timeGridWeek,timeGridDay'
	      	},
	      	buttonText: { // 버튼 글자 커스텀
	      		today : '오늘',
	      		month : '월간',
	      		week : '주간',
	      		day : '일간',
	      		list : '일정표',
	      		
	      	},
	      	locale : 'ko', // 한국어 설정
	      	initialView: 'dayGridMonth', // 초기 로드 될때 보이는 캘린더 화면(기본 설정: 달)
	      	//initialDate: '2022-07-01', // 초기 날짜 설정 (설정하지 않으면 오늘 날짜가 보인다.)
	      	navLinks: true, // 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
	      	selectable: true, // 달력 일자 드래그 설정 가능
	      	dayMaxEvents: true, // 이벤트가 오버되면 높이 제한 (+ 몇 개식으로 표현)
	      	nowIndicator: true, // 현재 시간 마크
	      	droppable : true, 
			editable : true, // 마우스 드래그로 일정 이동
	      	selectMirror: true, // timeGrid view에서만 작동
	      	
	      	
	      	select: function(arg) { // 캘린더에서 드래그로 이벤트 생성
	        	var title = prompt('일정 제목:');
	        	if (title) {
	          		calendar.addEvent({
		            	title: title,
		            	start: arg.start,
	            		end: arg.end,
	            		allDay: arg.allDay
	          		})
	        	}
	        	calendar.unselect()
	      	},
	      	
			eventDrop : function(info) { // 이벤트를 드래그를 해 손을 놓았을 때
				if (confirm("수정하시겠습니까?")) {
					var msg = updateFunc(info);
					alert(msg);
				} else {
					info.revert(); // 취소 시키기(없을 경우 무조건 이동이 이뤄진다.)
				}
			},
			
	      	
	      	eventClick: function(arg) { // 이벤크 클릭 시 삭제확인창 
	        	if (confirm('일정을 삭제하시겠습니까?')) {
	          	arg.event.remove()
	        	}
	      	},
	      	
	      	events: [
	    	  	{
					title  : '착수',
					start  : '2022-06-20',
					end    : '2022-07-08',
					color  : '#FFCC99'
				},
				{
					title  : '착수 발표',
					start  : '2022-07-08',
					color  : '#FF9900'
				},
				{
					title  : '하루 쉬자 ^_^',
					start  : '2022-07-09',
					color  : '#EF5350'
				},
				{
					title  : '구현',
					start  : '2022-07-11',
					end    : '2022-08-10',
					color  : '#FFCC33'
				},
	        
	      	]
	    });
	    calendar.render();
	    });

</script>
<style>

  body {
    margin: 40px 10px;
    padding: 0;
    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
    font-size: 14px;
  }

  #calendar {
    max-width: 1100px;
    margin: 0 auto;
  }

</style>


<title>calendar</title>
</head>
<body>
<div class="container-fluid">
	<div class="row">

		<div class="col-md-3">
			<div class="sticky-top mb-3">
				<div class="card">
					<div class="card-header">
						<h4 class="card-title">Draggable Events</h4>
					</div>
					<div class="card-body">
					
						<div id="external-events">
							<div class="external-event bg-success ui-draggable ui-draggable-handle" style="position: relative;">Lunch</div>
							<div class="external-event bg-warning ui-draggable ui-draggable-handle" style="position: relative;">Go home</div>
							<div class="external-event bg-info ui-draggable ui-draggable-handle" style="position: relative;">Do homework</div>
							<div class="external-event bg-primary ui-draggable ui-draggable-handle" style="position: relative;">Work on UI design</div>
							<div class="external-event bg-danger ui-draggable ui-draggable-handle" style="position: relative;">Sleep tight</div>
							<div class="checkbox">
								<label for="drop-remove">
									<input type="checkbox" id="drop-remove">
									remove after drop
								</label>
							</div>
						</div>
					</div>
				</div>
						
				<div class="card">
					<div class="card-header">
						<h3 class="card-title">Create Event</h3>
					</div>
					<div class="card-body">
						<div class="btn-group" style="width: 100%; margin-bottom: 10px;">
							<ul class="fc-color-picker" id="color-chooser">
								<li><a class="text-primary" href="#"><i class="fas fa-square"></i></a></li>
								<li><a class="text-warning" href="#"><i class="fas fa-square"></i></a></li>
								<li><a class="text-success" href="#"><i class="fas fa-square"></i></a></li>
								<li><a class="text-danger" href="#"><i class="fas fa-square"></i></a></li>
								<li><a class="text-muted" href="#"><i class="fas fa-square"></i></a></li>
							</ul>
						</div>
						
						<div class="input-group">
							<input id="new-event" type="text" class="form-control" placeholder="Event Title">
							<div class="input-group-append">
								<button id="add-new-event" type="button" class="btn btn-primary">Add</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="col-md-9">
			<div id='calendar'></div>
		</div>
	</div>
</div>


<script>
  $(function () {

    /* initialize the external events
     -----------------------------------------------------------------*/
    function ini_events(ele) {
      ele.each(function () {

        var eventObject = {
          title: $.trim($(this).text()) // 요소의 텍스트를 이벤트 제목으로 사용
        }

        // 이벤트 객체를 DOM 요소에 저장하면 나중에 접근할 수 있습니다.
        $(this).data('eventObject', eventObject)

        // jQuery UI를 사용하여 이벤트를 드래그 가능하게 만들기
        $(this).draggable({
          zIndex        : 1070,
          revert        : true, // 이벤트를 원래 상태로 되돌릴 것입니다.
          revertDuration: 0  //  드래그 후 원래 위치
        })

      })
    }

    ini_events($('#external-events div.external-event'))

    /* initialize the calendar
     -----------------------------------------------------------------*/
    // 캘린더 이벤트 날짜 (dummy data)
    var date = new Date()
    var d    = date.getDate(),
        m    = date.getMonth(),
        y    = date.getFullYear()

    var Calendar = FullCalendar.Calendar;
    var Draggable = FullCalendar.Draggable;

    var containerEl = document.getElementById('external-events');
    var checkbox = document.getElementById('drop-remove');
    var calendarEl = document.getElementById('calendar');

    // initialize the external events
    // -----------------------------------------------------------------

    new Draggable(containerEl, {
      itemSelector: '.external-event',
      eventData: function(eventEl) {
        return {
          title: eventEl.innerText,
          backgroundColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
          borderColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
          textColor: window.getComputedStyle( eventEl ,null).getPropertyValue('color'),
        };
      }
    });


    /* ADDING EVENTS */
    var currColor = '#3c8dbc' //Red by default
    // Color chooser button
    $('#color-chooser > li > a').click(function (e) {
      e.preventDefault()
      // Save color
      currColor = $(this).css('color')
      // Add color effect to button
      $('#add-new-event').css({
        'background-color': currColor,
        'border-color'    : currColor
      })
    })
    $('#add-new-event').click(function (e) {
      e.preventDefault()
      // Get value and make sure it is not null
      var val = $('#new-event').val()
      if (val.length == 0) {
        return
      }

      // Create events
      var event = $('<div />')
      event.css({
        'background-color': currColor,
        'border-color'    : currColor,
        'color'           : '#fff'
      }).addClass('external-event')
      event.text(val)
      $('#external-events').prepend(event)

      // Add draggable funtionality
      ini_events(event)

      // Remove event from text input
      $('#new-event').val('')
    })
  })
</script>


	
</body>
</html>