package kr.or.warehouse.controller.view;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.ManualVO;
import kr.or.warehouse.service.ManualService;

@Controller
@RequestMapping("/kw")
public class KwController {

	@Autowired
	private ManualService service;

	// kw dashboard start
	@RequestMapping("/main")
	public void main()throws Exception{}

	@RequestMapping("/hashTagListForm")
	public void hashTagListForm()throws Exception{}

	@RequestMapping("/empWorkListForm")
	public void empWorkListForm()throws Exception{}

	@RequestMapping("/empDocumentListForm")
	public void empDocumentListForm()throws Exception{}
	// kw dashboard end

	// manual start
	@RequestMapping("/manual/list")
	public ModelAndView manual(Criteria cri, Criteria favCri, ModelAndView mnv)throws Exception{
		String url="/kw/manual";

		Map<String,Object> dataMap = service.getManualList(cri);
		Map<String,Object> favdataMap = service.getFavManualList(favCri);

		mnv.addObject("dataMap",dataMap);
		mnv.addObject("favdataMap",favdataMap);
		mnv.setViewName(url);

		return mnv;

	}

	@RequestMapping("/manual/manualRegistForm")
	public String manualRegistForm()throws Exception{
		String url="/kw/manualRegistForm";
		return url;
	}

	 @RequestMapping(value="/manual/manualRegist",method=RequestMethod.POST,produces="text/plain; charset=utf-8")
	   public String regist(ManualVO manual,HttpServletRequest request,
	                   RedirectAttributes rttr)throws Exception{
	      String url="redirect:/kw/manual/list.do";

	      manual.seteNo(14310056);
	      manual.setManualTitle((String)request.getAttribute("XSSmanualTitle"));
	      service.regist(manual);

	      rttr.addFlashAttribute("from","regist");

	      return url;
	   }


	@RequestMapping("/manual/manualDetail")
	public ModelAndView manualDetail(String manualNo,String from, ModelAndView mnv )throws Exception{
		String url="/kw/manualDetail";

		ManualVO manual =null;
		if(from!=null && from.equals("list")) {
			manual=service.getManual(manualNo);
			url="redirect:/kw/manual/manualDetail.do?manualNo="+manualNo;
		}else {
			manual=service.getManualForModify(manualNo);
		}

		mnv.addObject("manual",manual);
		mnv.setViewName(url);

		return mnv;
	}

	@RequestMapping("/manual/manualmodifyForm")
	public ModelAndView manualmodifyForm(String manualNo, ModelAndView mnv)throws Exception{
		String url="/kw/manualmodifyForm";

		ManualVO manual = service.getManualForModify(manualNo);
		mnv.addObject("manual",manual);
		mnv.setViewName(url);

		return mnv;
	}

	@RequestMapping(value="/manual/manualModify",method=RequestMethod.POST)
	public String modifyPost(ManualVO manual,HttpServletRequest request,
							 RedirectAttributes rttr) throws Exception{

		String url = "redirect:/kw/manual/manualDetail.do";

		manual.setManualTitle((String)request.getAttribute("XSSmanualTitle"));

		service.modify(manual);

		rttr.addFlashAttribute("from","modify");
		rttr.addAttribute("manualNo",manual.getManualNo());

		return url;
	}

	@RequestMapping(value="/manualDetail")
	public String removeManualDetail() throws Exception{
		String url="/kw/manualDetail";
		return url;
	}

	@RequestMapping(value="/manual/manualRemove",method=RequestMethod.POST)
	public String remove(String manualNo,RedirectAttributes rttr) throws Exception{
		String url = "redirect:/kw/manualDetail";
		service.remove(manualNo);

		rttr.addAttribute("manualNo",manualNo);
		rttr.addFlashAttribute("from","remove");
		return url;
	}
	// manual end

	@RequestMapping("/knowHowList")
	public String knowHowList() throws Exception{
		String url = "kw/knowHowList";

		return url;
	}

	@RequestMapping("/approvalList")
	public String historyList() throws Exception{
		String url = "/kw/approvalList";
		return url;
	}

	@RequestMapping("/approvalDetail")
	public String approvalDetailGo()throws Exception{
		String url="/kw/approvalDetailGo";
		return url;
	}
}
