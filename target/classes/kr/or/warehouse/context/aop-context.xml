<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- propagation : 메소드 내에서 다른 메소드를 사용할 때 하나의 트랜잭션으로 묶을지 -->
			<tx:method name="*" propagation="REQUIRED"/>
			<tx:method name="*" rollback-for="Exception"/>
<!-- 			<tx:method name="regist*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="modify*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="remove*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="*Regist*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="*Modify*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="*Remove*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="write*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="read*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="get*" rollback-for="Exception"/> -->
<!-- 			<tx:method name="get*ForModify" read-only="true"/> -->
		</tx:attributes>
	</tx:advice>

	<config>
		<pointcut expression="execution(public * kr.or.warehouse.service..*(..))" id="servicePublicMethod"/>
		<advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod"/>
	</config>
</beans:beans>
